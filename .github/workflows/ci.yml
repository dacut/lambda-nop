name: Rust

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: "aarch64-unknown-linux-gnu,x86_64-unknown-linux-gnu"
      - name: Run formatting check.
        run: cargo fmt --check
      - name: Run clippy check.
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: Test
        run: cargo test --all-targets --all-features
      - name: Build Container image
        run: docker buildx bake --file docker-bake.hcl al2023-runtime

  push:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    if: github.repository == 'dacut/lambda-nop'
    environment: build-push
    permissions:
      contents: read
      packages: write
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::557925715019:role/LambdaNOPGitHubActions
      - name: Log in to DockerHub
        run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_TOKEN }}"
      - name: Log in to ECR public.
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/kanga
      - name: Build Container image
        run: docker buildx bake --file docker-bake.hcl al2023-runtime
